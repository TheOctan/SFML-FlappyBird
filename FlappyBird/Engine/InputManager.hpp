#pragma once

#ifndef ENGINE_INPUT_MANAGER_HPP
#define ENGINE_INPUT_MANAGER_HPP

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include<SFML\Graphics.hpp>

namespace Engine
{
	////////////////////////////////////////////////////////////
	/// \brief 
	///
	////////////////////////////////////////////////////////////
	class InputManager
	{
	public:

		////////////////////////////////////////////////////////////
		/// \brief Default constructor
		///
		////////////////////////////////////////////////////////////
		InputManager();

		////////////////////////////////////////////////////////////
		/// \brief Destructor
		///
		////////////////////////////////////////////////////////////
		~InputManager();


		////////////////////////////////////////////////////////////
		/// \brief Defines whether an object was clicked
		///
		/// \param object			Sprite who clicked
		/// \param button			Pressed button
		/// \param window		Render window
		/// \return Status of click on object
		///
		////////////////////////////////////////////////////////////
		bool IsSpriteClicked(sf::Sprite object, sf::Mouse::Button button, sf::RenderWindow& window) const;
		
		////////////////////////////////////////////////////////////
		/// \brief get coordinate of mouse relative to the window
		///
		/// \param window			Render window
		/// \return Vector of coordinate of mouse
		///
		////////////////////////////////////////////////////////////
		sf::Vector2i GetMousePosition(sf::RenderWindow& window) const;
	};

} // namespace Engine

#endif // !ENGINE_INPUT_MANAGER_HPP


